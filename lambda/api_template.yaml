AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: >
  sam-app

  Sample SAM Template for sam-app

Parameters:
  FileApiCustomDomain:
    Type: String
  ApiCustomDomain:
    Type: String
  StaticPageDomain:
    Type: String
  StaticPageBucket:
    Type: String
  CertificateArn:
    Type: String
  ApiStageName:
    Type: String
  AllowOrigin:
    Type: String
  WhiteIpAddressFrom:
    Type: String
  WhiteIpAddressTo:
    Type: String
  APIName:
    Type: String
  DbSuffix:
    Type: String
  LambdaMemorySize:
    Type: String
  FileStorageBucketSuffix:
    Type: String
  MyLayer:
    Type: String
  Route53HostZone:
    Type: String
  RoleArn:
    Type: String


# More info about Globals: https://github.com/awslabs/serverless-application-model/blob/master/docs/globals.rst
Globals:
  Function:
    CodeUri: app/
    Environment:
      Variables:
        AllowOrigin: !Ref AllowOrigin
        DbSuffix: !Ref DbSuffix
        FileStorageBucketSuffix: !Ref FileStorageBucketSuffix
        EnvName: !Ref ApiStageName
    MemorySize: !Ref LambdaMemorySize
    Layers:
      - !Ref MyLayer
    Runtime: python3.8
    Timeout: 5

Resources:
  RestApi:
    Type: AWS::Serverless::Api
    Properties:
      # Auth:
      #   ResourcePolicy:
      #     IpRangeWhitelist:
      #       - !Ref WhiteIpAddressTo
      #       - !Ref WhiteIpAddressFrom
      BinaryMediaTypes:
        - "multipart/form-data"
        - "image/*"
        - "video/*"
        - "audio/*"
        - "model/*"
        - "font/*"
        - "application/octet-stream"
        - "application/zip"
        - "application/pdf"
        - "application/ms*"
        - "application/java*"
        - "application/vnd.*"
        - "application/rtf"
        - "application/x-7z-compressed"
      EndpointConfiguration: REGIONAL
      Cors:
        AllowCredentials: true
        AllowHeaders: "'Origin, Authorization, Accept, Content-Type'"
        AllowMethods: "'GET, PUT, POST, OPTIONS'"
        AllowOrigin: !Ref AllowOrigin
      Domain:
        DomainName: !Ref ApiCustomDomain
        CertificateArn: !Ref CertificateArn
        Route53:
          HostedZoneId: !Ref Route53HostZone
        SecurityPolicy: TLS_1_2
      Name: !Ref APIName
      StageName: !Ref ApiStageName

  PostTestFunction:
    Type: AWS::Serverless::Function
    Properties:
      Handler: test.post_test
      Role: !Ref RoleArn
      Events:
        DefaultEvent:
          Type: Api
          Properties:
            RestApiId: !Ref RestApi
            Path: /post_test
            Method: post

  GetTestFunction:
    Type: AWS::Serverless::Function
    Properties:
      Handler: test.get_test
      Role: !Ref RoleArn
      Events:
        DefaultEvent:
          Type: Api
          Properties:
            RestApiId: !Ref RestApi
            Path: /get_test
            Method: post

  LoginFunction:
    Type: AWS::Serverless::Function
    Properties:
      Handler: auth.login
      Role: !Ref RoleArn
      Events:
        DefaultEvent:
          Type: Api
          Properties:
            RestApiId: !Ref RestApi
            Path: /login
            Method: post
  
  SignupFunction:
    Type: AWS::Serverless::Function
    Properties:
      Handler: auth.signup
      Role: !Ref RoleArn
      Events:
        DefaultEvent:
          Type: Api
          Properties:
            RestApiId: !Ref RestApi
            Path: /signup
            Method: post
  
  SnsLoginFunction:
    Type: AWS::Serverless::Function
    Properties:
      Handler: auth.sns_login
      Role: !Ref RoleArn
      Events:
        DefaultEvent:
          Type: Api
          Properties:
            RestApiId: !Ref RestApi
            Path: /sns_login
            Method: post
  
  WithdrawalFunction:
    Type: AWS::Serverless::Function
    Properties:
      Handler: user.withdrawal_event
      Role: !Ref RoleArn
      Events:
        DefaultEvent:
          Type: Api
          Properties:
            RestApiId: !Ref RestApi
            Path: /withdrawal
            Method: post
  
  RegistCompleteFunction:
    Type: AWS::Serverless::Function
    Properties:
      Handler: auth.regist_complete
      Role: !Ref RoleArn
      Events:
        DefaultEvent:
          Type: Api
          Properties:
            RestApiId: !Ref RestApi
            Path: /regist_complete
            Method: post
  
  LogoutFunction:
    Type: AWS::Serverless::Function
    Properties:
      Handler: auth.logout
      Role: !Ref RoleArn
      Events:
        DefaultEvent:
          Type: Api
          Properties:
            RestApiId: !Ref RestApi
            Path: /logout
            Method: post
  
  CheckTokenFunction:
    Type: AWS::Serverless::Function
    Properties:
      Handler: auth.check_token
      Role: !Ref RoleArn
      Events:
        DefaultEvent:
          Type: Api
          Properties:
            RestApiId: !Ref RestApi
            Path: /check_token
            Method: post
  
  GetUserDataFunction:
    Type: AWS::Serverless::Function
    Properties:
      Handler: user.get_user_data_event
      Role: !Ref RoleArn
      Events:
        DefaultEvent:
          Type: Api
          Properties:
            RestApiId: !Ref RestApi
            Path: /get_user_data
            Method: get
  
  UpdateUserDataFunction:
    Type: AWS::Serverless::Function
    Properties:
      Handler: user.update_user_data_event
      Role: !Ref RoleArn
      Events:
        DefaultEvent:
          Type: Api
          Properties:
            RestApiId: !Ref RestApi
            Path: /update_user_data
            Method: post
  
  ResetPasswordPrepareFunction:
    Type: AWS::Serverless::Function
    Properties:
      Handler: auth.reset_password_event
      Role: !Ref RoleArn
      Events:
        DefaultEvent:
          Type: Api
          Properties:
            RestApiId: !Ref RestApi
            Path: /reset_password
            Method: post

  ExecuteResetPasswordFunction:
    Type: AWS::Serverless::Function
    Properties:
      Handler: auth.execute_reset_password_event
      Role: !Ref RoleArn
      Events:
        DefaultEvent:
          Type: Api
          Properties:
            RestApiId: !Ref RestApi
            Path: /execute_reset_password
            Method: post

  GetMemoListFunction:
    Type: AWS::Serverless::Function
    Properties:
      Handler: memo.get_memo_list_event
      Role: !Ref RoleArn
      Events:
        DefaultEvent:
          Type: Api
          Properties:
            RestApiId: !Ref RestApi
            Path: /get_memo_list
            Method: get

  GetPinnedMemoListFunction:
    Type: AWS::Serverless::Function
    Properties:
      Handler: memo.get_pinned_memo_list_event
      Role: !Ref RoleArn
      Events:
        DefaultEvent:
          Type: Api
          Properties:
            RestApiId: !Ref RestApi
            Path: /get_pinned_memo_list
            Method: get
  
  GetMemoDataFunction:
    Type: AWS::Serverless::Function
    Properties:
      Handler: memo.get_memo_data_event
      Role: !Ref RoleArn
      Events:
        DefaultEvent:
          Type: Api
          Properties:
            RestApiId: !Ref RestApi
            Path: /get_memo_data
            Method: get
  
  GetMemoDataByShareIdFunction:
    Type: AWS::Serverless::Function
    Properties:
      Handler: memo.get_memo_data_by_share_id
      Role: !Ref RoleArn
      Events:
        DefaultEvent:
          Type: Api
          Properties:
            RestApiId: !Ref RestApi
            Path: /get_memo_data_by_share_id
            Method: get
  
  SaveMemoFunction:
    Type: AWS::Serverless::Function
    Properties:
      Handler: memo.save_memo_event
      Role: !Ref RoleArn
      Events:
        DefaultEvent:
          Type: Api
          Properties:
            RestApiId: !Ref RestApi
            Path: /save_memo
            Method: post
  
  DeleteMemoFunction:
    Type: AWS::Serverless::Function
    Properties:
      Handler: memo.delete_memo_event
      Role: !Ref RoleArn
      Events:
        SoftDeleteEvent:
          Type: Api
          Properties:
            RestApiId: !Ref RestApi
            Path: /to_trash_memo
            Method: post
        HardDeleteEvent:
          Type: Api
          Properties:
            RestApiId: !Ref RestApi
            Path: /delete_memo
            Method: post
        

  UpdateShareSettingsFunction:
    Type: AWS::Serverless::Function
    Properties:
      Handler: memo.update_share_settings_event
      Role: !Ref RoleArn
      Events:
        DefaultEvent:
          Type: Api
          Properties:
            RestApiId: !Ref RestApi
            Path: /update_share_settings
            Method: post

  SwitchPinnedFunction:
    Type: AWS::Serverless::Function
    Properties:
      Handler: memo.switch_pinned_event
      Role: !Ref RoleArn
      Events:
        DefaultEvent:
          Type: Api
          Properties:
            RestApiId: !Ref RestApi
            Path: /switch_pinned
            Method: post

  UploadFileFunction:
    Type: AWS::Serverless::Function
    Properties:
      Handler: files.upload_file_event
      Role: !Ref RoleArn
      Events:
        DefaultEvent:
          Type: Api
          Properties:
            RestApiId: !Ref RestApi
            Path: /upload_file
            Method: post

  CreateUploadUrlFunction:
    Type: AWS::Serverless::Function
    Properties:
      Handler: files.create_upload_url_event
      Role: !Ref RoleArn
      Events:
        DefaultEvent:
          Type: Api
          Properties:
            RestApiId: !Ref RestApi
            Path: /create_upload_url
            Method: post

  UploadLargeFileFunction:
    Type: AWS::Serverless::Function
    Properties:
      Handler: files.upload_large_file_event
      Role: !Ref RoleArn
      Events:
        DefaultEvent:
          Type: Api
          Properties:
            RestApiId: !Ref RestApi
            Path: /upload_large_file
            Method: post

  TagFunction:
    Type: AWS::Serverless::Function
    Properties:
      Handler: tags.tag_event
      Role: !Ref RoleArn
      Events:
        PostEvent:
          Type: Api
          Properties:
            RestApiId: !Ref RestApi
            Path: /update_tag
            Method: post
        GetEvent:
          Type: Api
          Properties:
            RestApiId: !Ref RestApi
            Path: /get_tags
            Method: get
        GetUuidEvent:
          Type: Api
          Properties:
            RestApiId: !Ref RestApi
            Path: /get_tag_id
            Method: post # hide input parameters
        GetRelationTagsEvent:
          Type: Api
          Properties:
            RestApiId: !Ref RestApi
            Path: /get_relation_tags
            Method: get
        SetTagRelationEvent:
          Type: Api
          Properties:
            RestApiId: !Ref RestApi
            Path: /set_tag_relation
            Method: post
        DeleteTagRelationEvent:
          Type: Api
          Properties:
            RestApiId: !Ref RestApi
            Path: /delete_tag_relation
            Method: post
          
# Outputs:
  # ServerlessRestApi is an implicit API created out of Events key under Serverless::Function
  # Find out more about other implicit resources you can reference within SAM
  # https://github.com/awslabs/serverless-application-model/blob/master/docs/internals/generated_resources.rst#api
  # HelloWorldApi:
  #   Description: "API Gateway endpoint URL for Stg stage for Hello World function"
  #   Value: !Sub "https://${ApiCustomDomain}/Stage/hello/"

